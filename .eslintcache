[{"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/index.js":"1","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/reportWebVitals.js":"2","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/App.js":"3","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/components/Navbar/Navbar.js":"4","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/LandingPage.js":"5","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/register.js":"6","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/Home.js":"7","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/components/Footer/Footer.js":"8","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/AdminDashboard.js":"9","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/ListResturant.js":"10","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/ListFoods.js":"11","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/Navbar/adminNavbar.js":"12","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/FoodCategory.js":"13","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/Restuarant.js":"14","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/Food.js":"15","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/components/Carousel/Carousel.js":"16","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/Popular.js":"17","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/Restaurant.js":"18"},{"size":547,"mtime":1609945181194,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1609090014656,"results":"21","hashOfConfig":"20"},{"size":1031,"mtime":1610372106375,"results":"22","hashOfConfig":"20"},{"size":5453,"mtime":1610460042970,"results":"23","hashOfConfig":"20"},{"size":482,"mtime":1610462645487,"results":"24","hashOfConfig":"20"},{"size":3542,"mtime":1610372940630,"results":"25","hashOfConfig":"20"},{"size":610,"mtime":1609950057422,"results":"26","hashOfConfig":"20"},{"size":2650,"mtime":1609951201896,"results":"27","hashOfConfig":"20"},{"size":543,"mtime":1610380764904,"results":"28","hashOfConfig":"20"},{"size":5700,"mtime":1610119539974,"results":"29","hashOfConfig":"20"},{"size":6546,"mtime":1610470572866,"results":"30","hashOfConfig":"20"},{"size":3135,"mtime":1610383756991,"results":"31","hashOfConfig":"20"},{"size":7875,"mtime":1610180540768,"results":"32","hashOfConfig":"20"},{"size":3644,"mtime":1610380901737,"results":"33","hashOfConfig":"20"},{"size":9967,"mtime":1610468085171,"results":"34","hashOfConfig":"20"},{"size":2278,"mtime":1610461701531,"results":"35","hashOfConfig":"20"},{"size":4125,"mtime":1610465837254,"results":"36","hashOfConfig":"20"},{"size":1788,"mtime":1610461588196,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zaa7tp",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/index.js",[],["82","83"],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/reportWebVitals.js",[],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/App.js",[],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/components/Navbar/Navbar.js",["84","85","86"],"import React, { useState, useEffect } from 'react';\nimport './Navbar.css';\nimport {\n  Collapse,\n  Navbar,\n  Button,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarBrand,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport Axios from \"axios\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { FiLogIn, FiLogOut } from \"react-icons/fi\";\n\nexport default function NavBar(props){\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [openLogin, setOpenLogin] = useState(false);\n  let history = useHistory();\n  \n  const email = useFormInput();\n  const password = useFormInput();\n  const toggle = () => setIsOpen(!isOpen);\n  const modalLogin = () => setOpenLogin(!openLogin);\n\n  useEffect(()=>{\n    const token = localStorage.getItem(\"token\");\n    console.log(\"I am token: \"+token);\n    if(token!=null){\n      setIsRegistered(true);\n      let role = localStorage.getItem(\"role\");\n      if(role===\"admin\"){\n        history.push(\"/adminDashboard\");\n      }\n      else{\n        history.push(\"/home\");\n      }\n    }\n    else{\n      setIsRegistered(false);\n    }\n  },[])\n\n  function handleLogin(e){ \n    e.preventDefault();\n    if(email.value==null && password.value==null){\n      return alert(\"Please enter username and password\");\n    }\n    else if(email.value==null || password.value==null){\n      return alert(\"username or password is missing\");\n    }\n    else{\n        Axios.post('http://localhost:3002/users/login', {email:email.value, password:password.value})\n        .then((response)=>{\n          const role = response.data.role;\n          if(response.data.status==='success'){\n            localStorage.setItem('token', response.data.token)\n            localStorage.setItem('email', response.data.email)\n            localStorage.setItem('role', response.data.role)\n            if(response.data.role===\"admin\"){\n              history.push(\"/adminDashboard\");\n            }\n            else{\n              history.push(\"/home\")\n            }\n          }\n          else if(response.data.status==='401'){\n            alert(\"Invalid username or password\");\n          }\n          else{\n            alert(\"unknown Error\")\n          }\n          return role;\n        }).catch((err) => console.log(err.response))\n      }\n  }\n\n  function handleLogout(e){\n    e.preventDefault();\n    localStorage.removeItem('token');\n    localStorage.clear();\n    if (localStorage.getItem('token') == null) {\n      window.location.href = \"/\"\n    }\n  }\n\n  return (\n    <div>\n      <Navbar className=\"navStyle\" sticky expand=\"md\">\n        <NavbarBrand className=\"brandText\" href=\"/\">FOODIE NEPAL</NavbarBrand>\n        <NavbarToggler className=\"togglerMenu\" onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink className=\"navlinkColor\" href=\"/\">Home</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"navlinkColor\" href=\"/services\">Foods</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"navlinkColor\" href=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className=\"navlinkColor\" href=\"/contact\">Contact</NavLink>\n            </NavItem>\n          </Nav>\n          {isRegistered?(\n            <Button onClick={handleLogout} color=\"danger\"><FiLogOut style={{fontSize:\"25px\", marginRight:'5px'}}/>Log Out</Button>\n          ):(\n            <Button onClick={modalLogin} color=\"primary\"><FiLogIn style={{fontSize:\"25px\", marginRight:'5px'}}/>Log In</Button>\n          )}\n        </Collapse>\n      </Navbar>\n\n      <Modal isOpen={openLogin} toggle={modalLogin}>\n                <ModalHeader><legend>Login</legend></ModalHeader>\n                <ModalBody>\n                  <form>\n                    <div className=\"form-group\">\n                      <label>Email Id</label>\n                      <input type=\"text\" {...email} className=\"form-control\" placeholder=\"Enter email\" required/>\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label>Password</label>\n                      <input type=\"password\" {...password} className=\"form-control\" placeholder=\"Enter password\" required/>\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                      </div>\n                    </div>\n                    <button type=\"submit\" onClick={handleLogin} className=\"btn btn-primary btn-block\" >Log In</button>\n                  </form>\n                </ModalBody>\n                <ModalFooter className=\"float-left\" align=\"center\">\n                    <a className=\"forgot-password \">Forgot password?</a>\n                    <p className=\"\"> Not registered yet? <a href=\"/register\">sign up?</a></p>\n                </ModalFooter>     \n              </Modal>\n    </div>\n  );\n}\n\nfunction useFormInput(initialValue){\n  const [value, setValue] = useState(initialValue)\n\n  function handleChange(e){\n    setValue(e.target.value);\n  }\n\n  return {\n    value,\n    onChange:handleChange\n  };\n}\n","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/LandingPage.js",[],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/register.js",[],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/Home.js",[],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/components/Footer/Footer.js",["87"],"import React from 'react';\nimport './Footer.css';\nimport {\n  Row,\n  Col\n} from 'reactstrap';\nimport { GrFacebook, GrTwitter, GrLinkedin} from \"react-icons/gr\";\nimport { SiGmail } from \"react-icons/si\";\n\n\nconst Footer = (props) => {\n  return (\n    <div className=\"footerDiv\">\n        <div className=\"container\">\n            <Row>\n                <Col lg={4}>\n                    <div align=\"left\" className=\"p-5\">\n                        <p className=\"footerTitle\">FOODIE NEPAL</p>\n                        <span className=\"footerFont\">\n                        01-1234567<br/>\n                        <a align=\"left\" href=\"/contact\">contact@foodienepal.com</a><br/>\n                        New Baneshwor, KTM<br/>\n                        </span>   \n                    </div>\n                </Col>\n                <Col lg={4}>\n                    <div align=\"left\" className=\"p-5\">\n                        <p className=\"footerTitle\">ABOUT FOODIE NEPAL</p>\n                        <span className=\"footerFont\">\n                        <p>FOODIE NEPAL is the project developed for academic course module (Agile Development).\n                            This is a team project in which team members are Amit Pradhan, Nabin Sapkota, Sachindra Thapa,\n                            Sujan Majkoti, Sandesh K.C and Ayush Ghimire. It is supervised by the module leader (Pratik Bhusal). </p>\n                        </span> \n                    </div>\n                </Col>\n                <Col lg={4}>\n                    <div align=\"left\" className=\"p-5\">\n                        <p className=\"footerTitle\">QUICK LINKS</p>\n                        <span className=\"footerFont\" >\n                            <a href=\"/\">HOME</a><hr/>\n                            <a href=\"/foods\">FOODS</a><hr/>\n                            <a href=\"/about\">ABOUT US</a><hr/>\n                            <a href=\"/contact\">CONTACT</a>\n                        </span>\n                    </div>\n                </Col>\n                <Col align=\"left\" className=\"footerFont pl-5\">\n                <p> <a href=\"/\">© FOODIE NEPAL</a> | Site by\n                <a href=\"#\"> AMIT PRADHAN</a>\t</p>\n                </Col>\n                <Col align=\"right\">\n                <a className=\"m-1\" href=\"https://www.facebook.com/\"><GrFacebook/></a>\n                <a className=\"m-1\" href=\"https://twitter.com/\"><GrTwitter/></a>\n                <a className=\"m-1\" href=\"https://www.linkedin.com/\"><GrLinkedin/></a>\n                <a className=\"m-1\" href=\"https://www.gmail.com/\"><SiGmail/></a>\n                </Col>\n            </Row>\n        </div>\n    </div>\n  )\n}\n\nexport default Footer;","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/AdminDashboard.js",[],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/ListResturant.js",["88","89","90"],"import React, { Component } from 'react'\r\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter,Input } from 'reactstrap';\r\nimport Axios from 'axios'\r\n\r\n\r\nexport default class ListFoods extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n                 _id: '',\r\n                 resturant_name: '',\r\n                 resturant_address: '',\r\n                 res_image:'',\r\n                 popular: [],\r\n                 resturant: [],\r\n                 modal : false,\r\n                 isupdated: false,\r\n                 config: {\r\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n                },\r\n                selectedFile: null,\r\n                imgPreview:null,\r\n          }\r\n          this.toggle = this.toggle.bind(this);\r\n      }\r\n\r\n  toggle() {\r\n    this.setState({\r\n    modal: !this.state.modal\r\n    })\r\n  }\r\n             \r\n  componentDidMount() {\r\n    Axios.get('http://localhost:3002/resturants',this.state.config)\r\n    .then((response)=>{\r\n      const data = response.data;\r\n      this.setState({popular:  data});\r\n      this.setState({resturant: data});        \r\n      console.log(\"data fecth\");       \r\n    }).catch(error => console.log(error.response));\r\n  }\r\n\r\n  handleFileSelect = (e) => {\r\n    this.setState({\r\n      selectedFile: e.target.files[0],\r\n      imgPreview: URL.createObjectURL(e.target.files[0])\r\n    })\r\n  }     \r\n       \r\n  handleChange = (e)  =>{\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  deleteresturant(resId){\r\n    Axios.delete(`http://localhost:3002/resturants/${resId}`, this.state.config)\r\n    .then((response) => {\r\n      console.log(\"delete trying\")\r\n    })\r\n  }\r\n\r\n  handleEdit = (resId) => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n    Axios.get(`http://localhost:3002/resturants/${resId}`,this.state.config)\r\n    .then((response)=>{\r\n      const data = response.data;\r\n      this.setState({\r\n        resturant: data,\r\n        imgPreview:`http://localhost:3002/uploads/${data.res_image}`\r\n      });         \r\n    }).catch(error => console.log(error.response)); \r\n  }\r\n\r\n  handleupdate = (e) =>{\r\n    this.setState({\r\n      resturant: { ...this.state.resturant, [e.target.name]: e.target.value }\r\n    })\r\n  }\r\n     \r\n  updateRestaurant = (resId) => {\r\n    const data = new FormData()\r\n    data.append('imageFile', this.state.selectedFile)\r\n    Axios.post('http://localhost:3002/upload', data, this.state.config)\r\n    .then((response) => {\r\n      this.setState({\r\n        res_image: response.data.filename\r\n      })\r\n      console.log(response)\r\n      Axios.put(`http://localhost:3002/resturants/${resId}`, \r\n      { \r\n        resturant_name:this.state.resturant.resturant_name,\r\n        resturant_address: this.state.resturant.resturant_address,\r\n        res_image:this.state.res_image \r\n      },this.state.config)\r\n        .then((response) => {\r\n          // alert(\"Restaurant updated successfully\")\r\n            window.location.reload();\r\n          console.log(response.data)\r\n        })\r\n        .catch((err) => console.log(err.response))\r\n    }).catch((err) => console.log(err.response))\r\n    }    \r\n  \r\n    render() {\r\n        return (\r\n            <Table hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Resturant Name</th>\r\n                <th>Resturant Address</th>\r\n                <th>Resturant Image</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                  this.state.popular.map(pop => \r\n                  <tr key={pop._id}>\r\n                    <td>{pop.resturant_name}</td>\r\n                    <td>{pop.resturant_address}</td>\r\n                          <td><img alt=\"img\" src={`http://localhost:3002/uploads/${pop.res_image}`} style={{height: \"50px\",width:\"50px\"}}/></td>\r\n                    <td><a className=\"btn btn-success\" onClick={() => this.handleEdit(pop._id)}>\r\n                                        Edit</a></td>\r\n                    <td><a onClick={() => this.deleteresturant(pop._id)} className=\"btn btn-danger\" href=\"\">Delete</a></td>\r\n                  </tr>\r\n                  )\r\n                }\r\n    \r\n        <Modal isOpen={this.state.modal}>\r\n          <ModalHeader toggle={this.toggle}><legend>Update</legend></ModalHeader>\r\n          <ModalBody>\r\n                <legend><h3>Update Resturant</h3></legend>\r\n                <div className=\"form-group\">\r\n                    <label> Resturant Name</label> \r\n                      <input type=\"text\" name=\"resturant_name\" className=\"form-control\"\r\n                        value ={this.state.resturant.resturant_name} onChange={this.handleupdate}/> \r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                      <label>Resturant Address</label>\r\n                      <input type=\"text\" name=\"resturant_address\" className=\"form-control\"\r\n                      value={this.state.resturant.resturant_address}  \r\n                      onChange={this.handleupdate}  />\r\n                  </div>\r\n                  <img className='img-thumbnail' width='200'\r\n                  src={this.state.imgPreview} alt=\"resImg\" />\r\n                  <Input type='file' name='res_image' id='res_image'\r\n                    onChange={this.handleFileSelect}/>\r\n                  <button className=\"btn btn-primary btn-block\" onClick={() => this.updateRestaurant(this.state.resturant._id)}>Update</button>   \r\n          </ModalBody>\r\n          <ModalFooter>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </tbody>\r\n    </Table>\r\n    )\r\n  }\r\n}\r\n","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/ListFoods.js",["91","92"],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/Navbar/adminNavbar.js",["93"],"import React, { Component } from 'react'\r\nimport {Navbar,NavbarBrand,NavbarToggler,Collapse,Nav,NavItem,NavLink,UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem, NavbarText} from 'reactstrap';\r\nimport './adminnavbar.css';\r\nimport { MdAccountCircle } from \"react-icons/md\";\r\n\r\n\r\nexport default class AdminNavbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             sidenavbar:false,\r\n             isOpen:false,\r\n             email:'',\r\n             config: {\r\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n              },\r\n        }\r\n    }\r\n     \r\n    toggle(){\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            email:localStorage.getItem('email')\r\n        })\r\n    }\r\n    \r\n    handleLogout = (e) => {\r\n        e.preventDefault();\r\n        localStorage.removeItem('token');\r\n        localStorage.clear();\r\n        if (localStorage.getItem('token') == null) {\r\n          window.location.href=\"/\"\r\n        }\r\n      }\r\n    \r\n    render() {\r\n            return (\r\n                <div>\r\n                <Navbar color=\"light\" light expand=\"md\">\r\n                    <NavbarBrand href=\"/adminDashboard\"><h3 style={{color:'DarkTurquoise'}}>FOODIE NEPAL</h3></NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle.bind(this)} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/adminDashboard\">Home</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/restaurant\">Restaurants</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/food\">Foods</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/foodCategory\">Food Category</NavLink>\r\n                        </NavItem>\r\n                        \r\n                    </Nav>\r\n                    <NavLink>\r\n                        <UncontrolledDropdown>\r\n                            <DropdownToggle nav caret>\r\n                            <MdAccountCircle style={{fontSize:\"30px\", marginRight:\"5px\"}}/>\r\n                            {this.state.email}\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem href=\"#\">\r\n                                My Profile\r\n                                </DropdownItem>\r\n                                <DropdownItem onClick={this.handleLogout}>\r\n                                Log Out\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </NavLink>\r\n                    </Collapse>\r\n                </Navbar>\r\n                </div>   \r\n            )\r\n    }\r\n}\r\n","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/FoodCategory.js",["94","95","96","97"],"import React, { Component } from 'react'\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter,Input, FormGroup, Label } from 'reactstrap';\nimport Axios from 'axios'\nimport AdminNavbar from '../Navbar/adminNavbar';\nimport { MdAdd } from \"react-icons/md\";\n\nexport default class ListFoods extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          categories: [],\n          category:[],\n          modal : false,\n          modal1:false,\n          imgPreview:null,\n          selectedFile: null,\n          config: {\n            headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n          },\n        }\n        this.toggle = this.toggle.bind(this);\n    } \n             \n    componentDidMount() {\n      Axios.get('http://localhost:3002/foodCat', this.state.config)\n        .then((response)=>{\n            const data = response.data;\n            this.setState({categories:data});\n            console.log(data)\n        }).catch(err=>console.log(err.response));\n    }\n\n    toggle=()=>{ \n      this.setState({\n        modal: !this.state.modal\n    })}\n\n    toggle1=()=>{ \n      this.setState({\n        modal1: !this.state.modal1\n    })}\n          \n    handleChange = (e)  =>{\n      this.setState({\n        [e.target.name]: e.target.value \n      })\n    }\n\n    deleteCat = (catId) => {\n      Axios.delete(`http://localhost:3002/foodCat/${catId}`, this.state.config)\n      .then((response) => {\n        window.location.reload(false)\n      }).catch(err=>console.log(err.response));\n    }\n\n    handleEdit = (catId) => {\n      this.setState({\n        modal: !this.state.modal\n      });\n      Axios.get(`http://localhost:3002/foodCat/${catId}`,this.state.config)\n      .then((response)=>{\n        const data = response.data;\n          this.setState({\n            category: data,\n            imgPreview:`http://localhost:3002/uploads/${data.catImg}`\n          });    \n        console.log(this.state.imgPreview)\n        })\n      .catch(error => console.log(error.response));\n    }\n\n    handleupdate = (e) =>{\n      this.setState({\n        category: { ...this.state.category, [e.target.name]: e.target.value }\n      })\n    }\n\n    handleFileSelect  = (e) =>{\n      this.setState({\n          selectedFile: e.target.files[0],\n          imgPreview:URL.createObjectURL(e.target.files[0])\n      })\n    }\n\n    addCat = (e) => {\n      e.preventDefault();\n        const data = new FormData()\n        data.append('imageFile', this.state.selectedFile)\n        Axios.post('http://localhost:3002/upload', data, this.state.config)\n            .then((response) => {\n                this.setState({\n                    catImg: response.data.filename\n                })\n            Axios.post('http://localhost:3002/foodCat',\n            {\n              category:this.state.category,\n              catImg:this.state.catImg\n            }, this.state.config)\n                .then((response)=>{\n                    console.log(response)\n                    alert(\"Category added successfully\")\n                    window.location.reload()\n                }).catch((err)=>console.log(err.response))\n            }).catch((err) => console.log(err.response))\n    }\n     \n    updateCat = (catId) => {\n      const data = new FormData()\n      data.append('imageFile', this.state.selectedFile)\n      Axios.post('http://localhost:3002/upload', data, this.state.config)\n        .then((response) => {\n          this.setState({\n            catImg: response.data.filename\n          })\n        Axios.put(`http://localhost:3002/foodCat/${catId}`, \n        { \n          category: this.state.category.category,\n          catImg:this.state.catImg\n        }, this.state.config)\n        .then((response) => {\n          alert(\"Category updated successfully\")\n          console.log(response.data)\n          window.location.reload();\n        })\n        .catch((err)=>console.log(err.response))\n        }).catch((err) => console.log(err.response))\n    }\n    \n    render() \n    {\n        return (\n        <>\n          <AdminNavbar/>\n          <div className=\"container\">\n            <br/>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h1>Add Food Category</h1>\n              </div>\n              <div className=\"col-md-6\">\n                  <Button color='primary' style={{float:\"right\"}} onClick={this.toggle1}>\n                    <MdAdd style={{fontSize:\"30px\", color:\"white\"}} />\n                    Add Category\n                  </Button>\n              </div>\n            </div>\n            <Table hover>\n            <thead>\n              <tr>\n                <th>Category Name</th>\n                <th>Category Image</th>\n                <th>Edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                this.state.categories.map(cat => \n                <tr key={cat._id}>\n                  <td>{cat.category}</td>\n                  <td>\n                    <img alt=\"catIcon\" src={`http://localhost:3002/uploads/${cat.catImg}`} style={{height: \"50px\",width:\"50px\"}}/>\n                  </td>\n                  <td>\n                    <a className=\"btn btn-success\" onClick={() => this.handleEdit(cat._id)}>Edit</a>\n                  </td>\n                  <td>\n                    <a onClick={() => this.deleteCat(cat._id)} className=\"btn btn-danger\">Delete</a>\n                  </td>\n                </tr>\n                )\n              }\n\n              <Modal isOpen={this.state.modal1}>\n                <ModalHeader toggle={this.toggle1}><legend>Add Food Category</legend></ModalHeader>\n                <ModalBody>\n                  <FormGroup>\n                    <Input type=\"text\" placeholder=\"Enter category name\" name=\"category\" onChange={this.handleChange} />\n                  </FormGroup>\n                  <FormGroup style={{display: \"ruby\"}}>\n                    <Label className=\"btn btn-outline-info float-left\" htmlFor=\"filePicker\">Upload image for food category</Label>\n                    <Input id=\"filePicker\" style={{visibility:\"hidden\"}} type='file' name='catImg' onChange={this.handleFileSelect}/>\n                    <img alt=\"Image Preview\"\n                      style={{display:'block', border: '1px solid gray', width:\"200px\", height:\"200px\", textAlign:'center'}} \n                      width='200' src={this.state.imgPreview}\n                    />\n                  </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <button className=\"btn btn-success btn-block\" id=\"btnbag\" onClick={this.addCat}>Add Category</button>\n                </ModalFooter>\n              </Modal>\n    \n              <Modal isOpen={this.state.modal}>\n                <ModalHeader toggle={this.toggle}><legend>Edit Category</legend></ModalHeader>\n                <ModalBody>\n                    <div className=\"form-group\">\n                      <label style={{color:'DarkSlateGray', fontSize:18}}> Category Name</label>\n                      <input type=\"text\" name=\"category\" className=\"form-control\" \n                        value ={this.state.category.category} onChange={this.handleupdate}/>\n\n                      <img alt=\"Image Preview\" width='200' src={this.state.imgPreview}/><br/>\n                      <label style={{color:'DarkSlateGray', fontSize:18}}>Choose picture for category :</label>\n                      <Input type='file' name='foodimage' onChange={this.handleFileSelect}/>\n                      \n                    </div>\n                    <Button className=\"btn btn-success btn-block\" \n                      onClick={() => this.updateCat(this.state.category._id)}>Update</Button>   \n                </ModalBody>\n                <ModalFooter></ModalFooter>\n              </Modal>\n            </tbody>\n          </Table>\n        </div>\n        </>\n        )\n    }\n}\n","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/Restuarant.js",["98"],"import React, { Component } from 'react'\r\nimport { Label, FormGroup, Button, Input } from 'reactstrap'\r\nimport Axios from 'axios'\r\nimport ListResturant from './ListResturant';\r\nimport AdminNavbar from '../Navbar/adminNavbar';\r\n\r\nexport default class AddRestuarant extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       resturant_name: null,\r\n       resturant_address: null,\r\n       fooditem: null,\r\n       res_image: null,\r\n       food : [],\r\n       imgPreview:null,\r\n       config: {\r\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n    },\r\n    selectedFile: null,\r\n    }\r\n    this.handleFileSelect = this.handleFileSelect.bind(this)\r\n  }\r\n\r\n    handleFileSelect = (e) => {\r\n      this.setState({\r\n        selectedFile: e.target.files[0],\r\n        imgPreview:URL.createObjectURL(e.target.files[0])\r\n      })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      })\r\n    }\r\n\r\n    handleFoodChange = (e) => {\r\n      this.setState({\r\n        fooditem : e.target.value\r\n      });\r\n    }\r\n\r\n    addRest = () => {\r\n      const data = new FormData();\r\n      data.append('imageFile',this.state.selectedFile)\r\n      Axios.post('http://localhost:3002/upload', data, this.state.config)\r\n      .then((response) => {\r\n          this.setState({\r\n              res_image: response.data.filename\r\n          })\r\n          Axios.post('http://localhost:3002/resturants',this.state,this.state.config)\r\n          .then((response) => {\r\n            alert(\"Restaurant added successfully\");\r\n            window.location.reload(false)\r\n            console.log(response.data)\r\n          })\r\n          .catch((err) => console.log(err.response))\r\n      }).catch((err) => console.log(err.response))\r\n    }\r\n      \r\n\r\n    render() {\r\n      return (\r\n        <>\r\n        <AdminNavbar/>\r\n        <div className=\"container\">\r\n          <h2 style={{color:'#34495E'}}>Add Resturant</h2><hr/>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n              <form style={{backgroundColor:'#EAF2F8'}} className=\"p-3\">\r\n                <FormGroup>\r\n                  <Input type='text' id=\"resturantname\" name='resturant_name' value={this.state.resturant_name}\r\n                    onChange={this.handleChange} placeholder=\"Enter restaurant name\" required/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Input type='text' id='resturant_address' name='resturant_address' value={this.state.resturant_address}\r\n                    onChange={ this.handleChange} placeholder=\"Enter restaurant address\" required/>\r\n                    </FormGroup>\r\n                  <FormGroup style={{display: \"ruby\"}}>\r\n                    <Label className=\"btn btn-outline-info float-left\" htmlFor=\"filePicker\">Upload image for restaurant</Label>\r\n                    <Input id=\"filePicker\" style={{visibility:\"hidden\"}} type='file' name='res_image' onChange={this.handleFileSelect}/>\r\n                  </FormGroup>\r\n                  <Button color='success' onClick={this.addRest} block>Add Resturant</Button>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-md-4 flex\">\r\n              <img alt=\"Image Preview\" \r\n              style={{display:'block', border: '1px solid gray', width:\"200px\", textAlign:'center'}} \r\n              src={this.state.imgPreview}/><br/>\r\n            </div>\r\n          </div>\r\n              <hr></hr>\r\n              <h2 style={{color:'#34495E'}}>View Restaurant</h2>\r\n            <ListResturant />\r\n          </div>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n\r\n","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/admin/pages/Food.js",["99"],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/components/Carousel/Carousel.js",[],"/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/Popular.js",["100"],"import React, { Component } from 'react'\r\nimport { Input, Row, Modal, ModalHeader, ModalBody, ModalFooter, Container } from 'reactstrap'\r\nimport '../components/Style/popular.css'\r\nimport Axios from 'axios'\r\n\r\nexport default class Popular extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      foodname: '',\r\n      foodimage: '',\r\n      food:[],\r\n      notes:'',\r\n      quantity:'',\r\n      popular: [],\r\n      totalprice:'',\r\n      modal:false,\r\n      config: {\r\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n      },\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle(){\r\n    this.setState({\r\n      modal:!this.state.modal\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get('http://localhost:3002/foods',this.state.config)\r\n    .then((response)=>{\r\n      const data = response.data;\r\n      this.setState({popular:  data});\r\n      console.log(\"data fecth\");\r\n     \r\n    }).catch(error => console.log(error.response));\r\n  }\r\n\r\n  handleFood = (foodId) => {\r\n    if(localStorage.length===0) {\r\n      alert(\"Please login...\")\r\n    }\r\n    else{\r\n    this.setState({\r\n      modal: !this.state.modal\r\n\r\n    })\r\n    Axios.get(`http://localhost:3002/foods/${foodId}`, this.state.config)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        this.setState({\r\n          food: data,\r\n          totalprice: data.price\r\n        });\r\n        console.log(\"data fecth\");\r\n      }).catch(error => console.log(error.response));\r\n    }\r\n  }\r\n\r\n  addCart(){\r\n    Axios.post(`http://localhost:3002/cart/`,\r\n      {\r\n        food: this.state.food._id,\r\n        totalprice: (this.state.totalprice * this.state.quantity),\r\n        notes: this.state.notes,\r\n        quanity: this.state.quantity\r\n      }, this.state.config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          modal: !this.state.modal\r\n        })\r\n      }).catch((err) => console.log(err.response));\r\n  }\r\n\r\n    render() {\r\n        return (\r\n           <div style={{backgroundColor:'OldLace'}} className=\"container\">\r\n              <span className='h3' style={{color:'DarkOrange'}}>Foods for you  </span>\r\n            <Row>\r\n              {\r\n                this.state.popular.map((pop => \r\n                  <div key={pop._id} className=\"Col-md-4\" id=\"product\">\r\n                    <figure className=\"card card-product p-2\">\r\n                        <img alt=\"foodPic\" width='250' height='150' src={`http://localhost:3002/uploads/${pop.foodimage}`}/>\r\n                        <figcaption className=\"info-wrap\">\r\n                          <legend className=\"title\">{pop.foodname}</legend>\r\n                          <h6 className=\"title\">Rs. {pop.price}</h6>\r\n                        </figcaption>\r\n                        <button className=\"btn btn-primary\" onClick={()=>this.handleFood(pop._id)}>Add to cart</button>\r\n                    </figure>\r\n                  </div>\r\n                  ))\r\n              }\r\n            </Row>\r\n           \r\n\r\n            <Modal isOpen={this.state.modal}>\r\n              <ModalHeader toggle={this.toggle}>Item : {this.state.food.foodname}<br/>\r\n                      Price : Rs.{this.state.food.price}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <p>Add notes</p>\r\n                <textarea id=\"notes\" value={this.state.notes} name=\"notes\" onChange={this.handleChange}></textarea>\r\n                <hr/>\r\n                <p>Add quantity</p>\r\n                <input type=\"number\" pattern=\"[0-9]*\" name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} min=\"1\" max=\"100\" />\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Container id=\"ftr\">\r\n                  <button className=\"btn btn-lg btn-success\" id=\"btnbag\" onClick={() => this.addCart(this.state.food._id)}>Add to cart</button>\r\n                </Container>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        )\r\n  }\r\n}\r\n","/home/amit/ubuntu20.04/Agile/FoodieNepal_Frontend/foodienepal/src/Pages/Restaurant.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":18,"column":10,"nodeType":"107","messageId":"108","endLine":18,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":48,"column":5,"nodeType":"111","endLine":48,"endColumn":7,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":145,"column":21,"nodeType":"115","endLine":145,"endColumn":53},{"ruleId":"113","severity":1,"message":"116","line":49,"column":17,"nodeType":"115","endLine":49,"endColumn":29},{"ruleId":"105","severity":1,"message":"117","line":2,"column":17,"nodeType":"107","messageId":"108","endLine":2,"endColumn":23},{"ruleId":"113","severity":1,"message":"114","line":127,"column":25,"nodeType":"115","endLine":127,"endColumn":97},{"ruleId":"113","severity":1,"message":"116","line":129,"column":25,"nodeType":"115","endLine":129,"endColumn":109},{"ruleId":"113","severity":1,"message":"114","line":152,"column":21,"nodeType":"115","endLine":152,"endColumn":93},{"ruleId":"113","severity":1,"message":"116","line":155,"column":21,"nodeType":"115","endLine":155,"endColumn":100},{"ruleId":"105","severity":1,"message":"118","line":2,"column":134,"nodeType":"107","messageId":"108","endLine":2,"endColumn":144},{"ruleId":"113","severity":1,"message":"114","line":165,"column":21,"nodeType":"115","endLine":165,"endColumn":93},{"ruleId":"113","severity":1,"message":"114","line":168,"column":21,"nodeType":"115","endLine":168,"endColumn":91},{"ruleId":"119","severity":1,"message":"120","line":183,"column":21,"nodeType":"115","endLine":186,"endColumn":23},{"ruleId":"119","severity":1,"message":"120","line":202,"column":23,"nodeType":"115","endLine":202,"endColumn":89},{"ruleId":"119","severity":1,"message":"120","line":89,"column":15,"nodeType":"115","endLine":91,"endColumn":44},{"ruleId":"119","severity":1,"message":"120","line":218,"column":21,"nodeType":"115","endLine":221,"endColumn":23},{"ruleId":"105","severity":1,"message":"121","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":15},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["124"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","'NavbarText' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [history]",{"range":"127","text":"128"},[1166,1168],"[history]"]