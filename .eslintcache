[{"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\index.js":"1","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\reportWebVitals.js":"2","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\App.js":"3","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\PrivateRoute.js":"4","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\LandingPage.js":"5","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\register.js":"6","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\Home.js":"7","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\viewCart.js":"8","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\Restuarant.js":"9","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\AdminDashboard.js":"10","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\FoodCategory.js":"11","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\Food.js":"12","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\Category.js":"13","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\Popular.js":"14","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\Restaurant.js":"15","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\ListResturant.js":"16","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\ListFoods.js":"17","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\components\\Carousel\\Carousel.js":"18","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\components\\Footer\\Footer.js":"19","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\components\\Navbar\\Navbar.js":"20","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\Navbar\\adminNavbar.js":"21","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\viewOrder.js":"22","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\ResturantFood.js":"23","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\viewProfile.js":"24"},{"size":565,"mtime":1611682451175,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1611682451177,"results":"27","hashOfConfig":"26"},{"size":1530,"mtime":1612168213693,"results":"28","hashOfConfig":"26"},{"size":601,"mtime":1611682451103,"results":"29","hashOfConfig":"26"},{"size":1055,"mtime":1611682451092,"results":"30","hashOfConfig":"26"},{"size":4655,"mtime":1611688060390,"results":"31","hashOfConfig":"26"},{"size":574,"mtime":1611682451090,"results":"32","hashOfConfig":"26"},{"size":7165,"mtime":1612167079039,"results":"33","hashOfConfig":"26"},{"size":3644,"mtime":1611682451118,"results":"34","hashOfConfig":"26"},{"size":543,"mtime":1611682451112,"results":"35","hashOfConfig":"26"},{"size":8093,"mtime":1611755113198,"results":"36","hashOfConfig":"26"},{"size":10019,"mtime":1611755057203,"results":"37","hashOfConfig":"26"},{"size":8158,"mtime":1611756500416,"results":"38","hashOfConfig":"26"},{"size":4564,"mtime":1611759238071,"results":"39","hashOfConfig":"26"},{"size":1792,"mtime":1612163754884,"results":"40","hashOfConfig":"26"},{"size":5700,"mtime":1611682451117,"results":"41","hashOfConfig":"26"},{"size":8868,"mtime":1611682451116,"results":"42","hashOfConfig":"26"},{"size":2361,"mtime":1611682451163,"results":"43","hashOfConfig":"26"},{"size":2712,"mtime":1611682451166,"results":"44","hashOfConfig":"26"},{"size":6123,"mtime":1612364753439,"results":"45","hashOfConfig":"26"},{"size":3147,"mtime":1611755240034,"results":"46","hashOfConfig":"26"},{"size":4925,"mtime":1611838174998,"results":"47","hashOfConfig":"26"},{"size":1702,"mtime":1612166279120,"results":"48","hashOfConfig":"26"},{"size":6080,"mtime":1612368735355,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"i1av52",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\index.js",[],["111","112"],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\reportWebVitals.js",[],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\App.js",[],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\PrivateRoute.js",[],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\LandingPage.js",[],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\register.js",[],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\Home.js",[],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\viewCart.js",["113"],"import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport moment from 'moment';\r\nimport { Table, Modal, ModalHeader, ModalBody, ModalFooter, Label, Input, FormGroup} from 'reactstrap';\r\nimport UserNavbar from \"../components/Navbar/Navbar\";\r\n\r\nexport default class Cart extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      user: [],\r\n      cart: [],\r\n      food: [],\r\n      notes:'',\r\n      viewfood: [],\r\n      modal: false,\r\n      foodname: '',\r\n      totalprice: '',\r\n      totAmt:0,\r\n      updatedprice: 0,\r\n      updatedquanity: '',\r\n      quanity:1,\r\n      show: true,\r\n      max: 5,\r\n      min: 0,\r\n      config: {\r\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n      },\r\n      CartId: ''\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get('http://localhost:3002/cart', this.state.config)\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        this.setState({\r\n          cart: response.data,\r\n        })\r\n      })\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  removeCardList = (CartId) => {\r\n    Axios.delete(`http://localhost:3002/cart/${CartId}`, this.state.config)\r\n      .then((response) => {\r\n        const filteredCartList = this.state.cart.filter((cart) => {\r\n          return cart._id !== CartId\r\n        })\r\n        this.setState({\r\n          visible1: true,\r\n          cart: filteredCartList\r\n        })\r\n      }).catch((err) => console.log(err.response));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      viewfood:{...this.state.viewfood, [e.target.name]: (e.target.validity.valid) ? e.target.value:''}\r\n    })\r\n  }\r\n\r\n  handleEdit = (foodId) => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n    Axios.get(`http://localhost:3002/cart/${foodId}`, this.state.config)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        this.setState({\r\n          viewfood: data\r\n        });\r\n        console.log(this.state.viewfood);\r\n      }).catch(error => console.log(error.response));\r\n  }\r\n\r\n  handleUpdate = (cartId) => {\r\n    Axios.put(`http://localhost:3002/cart/${cartId}`,{\r\n      quanity: this.state.viewfood.quanity,\r\n      totalprice: (this.state.viewfood.food.price * this.state.viewfood.quanity),\r\n      notes: this.state.viewfood.notes,\r\n    }, this.state.config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          modal: !this.state.modal\r\n        })\r\n      }).catch((err) => console.log(err.response));\r\n      alert(\"updated successfully\")\r\n      window.location.reload();\r\n  }\r\n\r\n  handleOrder = () => {\r\n    this.state.cart.forEach(item => {\r\n      Axios.post(`http://localhost:3002/order/`,\r\n      {\r\n        food: item.food._id,\r\n        notes: item.notes,\r\n        dateTime: moment().utcOffset('+05:30').format('YYYY-MM-DD hh:mm a'),\r\n        quanity: item.quanity\r\n      }, this.state.config)\r\n      .then((response) => {\r\n        Axios.delete(`http://localhost:3002/cart/${item._id}`, this.state.config)\r\n          .then((response)=>{\r\n            console.log(\"Deleted Successfully\")\r\n            window.location.reload();\r\n          }).catch((err)=>console.log(err.response));\r\n          \r\n        console.log(response);\r\n        alert(\"Ordered successfully\")\r\n      }).catch((err) => console.log(err.response));\r\n    });\r\n  }\r\n\r\n  submit = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to order',\r\n      message: 'Are you sure to order this items.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => this.handleOrder()\r\n        },\r\n        {\r\n          label: 'No',\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //Try for loop:\r\n    // for (let i = 0; i < this.state.cart.length; i++) {\r\n    //   this.state.totAmt += this.state.cart[i].totalprice;\r\n    // }\r\n\r\n    //OR this method\r\n    // Calculation of the total amount of cart\r\n    this.state.totAmt = this.state.cart.reduce(\r\n      (prevValue, currentValue) => prevValue + currentValue.totalprice,\r\n      0\r\n    );\r\n\r\n    return (\r\n      <>\r\n      <UserNavbar/>\r\n      <div class=\"container-fluid\">\r\n      <div id=\"viewCartDiv\">\r\n        <Table hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Note</th>\r\n              <th>Quantity</th>\r\n              <th>Price</th>\r\n              <th>Edit</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              this.state.cart.map(cart => {\r\n                return (\r\n                  <tr key={cart._id}>\r\n                  <td>{cart.food.foodname}</td>\r\n                  <td>{cart.notes}</td>\r\n                  <td>{cart.quanity}</td>\r\n                  <td>{cart.food.price * cart.quanity}</td>   \r\n                  <td>\r\n                    <button type=\"button\" class=\"btn btn-primary\"\r\n                      onClick={() => this.handleEdit(cart._id)} >Edit</button>\r\n                  </td>\r\n                  <td><button type=\"button\" class=\"btn btn-danger\" onClick={() => this.removeCardList(cart._id)}>Remove</button></td>\r\n                </tr>)\r\n              })\r\n            }\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td colSpan=\"6\" align=\"right\">\r\n                <label>Total Amount: Rs {this.state.totAmt}</label>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"6\" align=\"right\">\r\n              <button type=\"button\" class=\"btn btn-lg btn-success\"\r\n              onClick={this.submit} >Order</button>\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </Table>\r\n\r\n        <Modal isOpen={this.state.modal}>\r\n          <ModalHeader toggle={this.toggle}>{this.state.viewfood.food?this.state.viewfood.food.foodname:\"\"}<br/>\r\n              Rs.{this.state.viewfood.totalprice}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label htmlFor=\"notes\">Add notes</Label>\r\n              <Input id=\"notes\" \r\n                type=\"textarea\"\r\n                name=\"notes\" \r\n                value={this.state.viewfood.notes} \r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Quantity</Label>\r\n              <Input \r\n                type=\"number\" \r\n                pattern=\"[0-9]*\" \r\n                name=\"quanity\" \r\n                value={this.state.viewfood.quanity} \r\n                onChange={this.handleChange} \r\n                min=\"1\" \r\n                max=\"100\" \r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n              <button className=\"btn btn-lg btn-success\" id=\"btnbag\" onClick={() => this.handleUpdate(this.state.viewfood._id)}>Update</button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\Restuarant.js",["114"],"import React, { Component } from 'react'\r\nimport { Label, FormGroup, Button, Input } from 'reactstrap'\r\nimport Axios from 'axios'\r\nimport ListResturant from './ListResturant';\r\nimport AdminNavbar from '../Navbar/adminNavbar';\r\n\r\nexport default class AddRestuarant extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       resturant_name: null,\r\n       resturant_address: null,\r\n       fooditem: null,\r\n       res_image: null,\r\n       food : [],\r\n       imgPreview:null,\r\n       config: {\r\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n    },\r\n    selectedFile: null,\r\n    }\r\n    this.handleFileSelect = this.handleFileSelect.bind(this)\r\n  }\r\n\r\n    handleFileSelect = (e) => {\r\n      this.setState({\r\n        selectedFile: e.target.files[0],\r\n        imgPreview:URL.createObjectURL(e.target.files[0])\r\n      })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      })\r\n    }\r\n\r\n    handleFoodChange = (e) => {\r\n      this.setState({\r\n        fooditem : e.target.value\r\n      });\r\n    }\r\n\r\n    addRest = () => {\r\n      const data = new FormData();\r\n      data.append('imageFile',this.state.selectedFile)\r\n      Axios.post('http://localhost:3002/upload', data, this.state.config)\r\n      .then((response) => {\r\n          this.setState({\r\n              res_image: response.data.filename\r\n          })\r\n          Axios.post('http://localhost:3002/resturants',this.state,this.state.config)\r\n          .then((response) => {\r\n            alert(\"Restaurant added successfully\");\r\n            window.location.reload(false)\r\n            console.log(response.data)\r\n          })\r\n          .catch((err) => console.log(err.response))\r\n      }).catch((err) => console.log(err.response))\r\n    }\r\n      \r\n\r\n    render() {\r\n      return (\r\n        <>\r\n        <AdminNavbar/>\r\n        <div className=\"container\">\r\n          <h2 style={{color:'#34495E'}}>Add Resturant</h2><hr/>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n              <form style={{backgroundColor:'#EAF2F8'}} className=\"p-3\">\r\n                <FormGroup>\r\n                  <Input type='text' id=\"resturantname\" name='resturant_name' value={this.state.resturant_name}\r\n                    onChange={this.handleChange} placeholder=\"Enter restaurant name\" required/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Input type='text' id='resturant_address' name='resturant_address' value={this.state.resturant_address}\r\n                    onChange={ this.handleChange} placeholder=\"Enter restaurant address\" required/>\r\n                    </FormGroup>\r\n                  <FormGroup style={{display: \"ruby\"}}>\r\n                    <Label className=\"btn btn-outline-info float-left\" htmlFor=\"filePicker\">Upload image for restaurant</Label>\r\n                    <Input id=\"filePicker\" style={{visibility:\"hidden\"}} type='file' name='res_image' onChange={this.handleFileSelect}/>\r\n                  </FormGroup>\r\n                  <Button color='success' onClick={this.addRest} block>Add Resturant</Button>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-md-4 flex\">\r\n              <img alt=\"Image Preview\" \r\n              style={{display:'block', border: '1px solid gray', width:\"200px\", textAlign:'center'}} \r\n              src={this.state.imgPreview}/><br/>\r\n            </div>\r\n          </div>\r\n              <hr></hr>\r\n              <h2 style={{color:'#34495E'}}>View Restaurant</h2>\r\n            <ListResturant />\r\n          </div>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n\r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\AdminDashboard.js",[],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\FoodCategory.js",["115","116","117","118"],"import React, { Component } from 'react'\r\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter,Input, FormGroup, Label } from 'reactstrap';\r\nimport Axios from 'axios'\r\nimport AdminNavbar from '../Navbar/adminNavbar';\r\nimport { MdAdd } from \"react-icons/md\";\r\n\r\nexport default class ListFoods extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          categories: [],\r\n          category:[],\r\n          modal : false,\r\n          modal1:false,\r\n          imgPreview:null,\r\n          selectedFile: null,\r\n          config: {\r\n            headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n          },\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    } \r\n             \r\n    componentDidMount() {\r\n      Axios.get('http://localhost:3002/foodCat', this.state.config)\r\n        .then((response)=>{\r\n            const data = response.data;\r\n            this.setState({categories:data});\r\n            console.log(data)\r\n        }).catch(err=>console.log(err.response));\r\n    }\r\n\r\n    toggle=()=>{ \r\n      this.setState({\r\n        modal: !this.state.modal\r\n    })}\r\n\r\n    toggle1=()=>{ \r\n      this.setState({\r\n        modal1: !this.state.modal1\r\n    })}\r\n          \r\n    handleChange = (e)  =>{\r\n      this.setState({\r\n        [e.target.name]: e.target.value \r\n      })\r\n    }\r\n\r\n    deleteCat = (catId) => {\r\n      Axios.delete(`http://localhost:3002/foodCat/${catId}`, this.state.config)\r\n      .then((response) => {\r\n        window.location.reload(false)\r\n      }).catch(err=>console.log(err.response));\r\n    }\r\n\r\n    handleEdit = (catId) => {\r\n      this.setState({\r\n        modal: !this.state.modal\r\n      });\r\n      Axios.get(`http://localhost:3002/foodCat/${catId}`,this.state.config)\r\n      .then((response)=>{\r\n        const data = response.data;\r\n          this.setState({\r\n            category: data,\r\n            imgPreview:`http://localhost:3002/uploads/${data.catImg}`\r\n          });    \r\n        console.log(this.state.imgPreview)\r\n        })\r\n      .catch(error => console.log(error.response));\r\n    }\r\n\r\n    handleupdate = (e) =>{\r\n      this.setState({\r\n        category: { ...this.state.category, [e.target.name]: e.target.value }\r\n      })\r\n    }\r\n\r\n    handleFileSelect  = (e) =>{\r\n      this.setState({\r\n          selectedFile: e.target.files[0],\r\n          imgPreview:URL.createObjectURL(e.target.files[0])\r\n      })\r\n    }\r\n\r\n    addCat = (e) => {\r\n      e.preventDefault();\r\n        const data = new FormData()\r\n        data.append('imageFile', this.state.selectedFile)\r\n        Axios.post('http://localhost:3002/upload', data, this.state.config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    catImg: response.data.filename\r\n                })\r\n            Axios.post('http://localhost:3002/foodCat',\r\n            {\r\n              category:this.state.category,\r\n              catImg:this.state.catImg\r\n            }, this.state.config)\r\n                .then((response)=>{\r\n                    console.log(response)\r\n                    alert(\"Category added successfully\")\r\n                    window.location.reload()\r\n                }).catch((err)=>console.log(err.response))\r\n            }).catch((err) => console.log(err.response))\r\n    }\r\n     \r\n    updateCat = (catId) => {\r\n      const data = new FormData()\r\n      data.append('imageFile', this.state.selectedFile)\r\n      Axios.post('http://localhost:3002/upload', data, this.state.config)\r\n        .then((response) => {\r\n          this.setState({\r\n            catImg: response.data.filename\r\n          })\r\n        Axios.put(`http://localhost:3002/foodCat/${catId}`, \r\n        { \r\n          category: this.state.category.category,\r\n          catImg:this.state.catImg\r\n        }, this.state.config)\r\n        .then((response) => {\r\n          alert(\"Category updated successfully\")\r\n          console.log(response.data)\r\n          window.location.reload();\r\n        })\r\n        .catch((err)=>console.log(err.response))\r\n        }).catch((err) => console.log(err.response))\r\n    }\r\n    \r\n    render() \r\n    {\r\n        return (\r\n        <>\r\n          <AdminNavbar/>\r\n          <div className=\"container\">\r\n            <br/>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h1>Add Item Category</h1>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                  <Button color='primary' style={{float:\"right\"}} onClick={this.toggle1}>\r\n                    <MdAdd style={{fontSize:\"30px\", color:\"white\"}} />\r\n                    Add Category\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n            <Table hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Category Name</th>\r\n                <th>Category Image</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                this.state.categories.map(cat => \r\n                <tr key={cat._id}>\r\n                  <td>{cat.category}</td>\r\n                  <td>\r\n                    <img alt=\"catIcon\" src={`http://localhost:3002/uploads/${cat.catImg}`} style={{height: \"50px\",width:\"50px\"}}/>\r\n                  </td>\r\n                  <td>\r\n                    <a className=\"btn btn-success\" onClick={() => this.handleEdit(cat._id)}>Edit</a>\r\n                  </td>\r\n                  <td>\r\n                    <a onClick={() => this.deleteCat(cat._id)} className=\"btn btn-danger\">Delete</a>\r\n                  </td>\r\n                </tr>\r\n                )\r\n              }\r\n\r\n              <Modal isOpen={this.state.modal1}>\r\n                <ModalHeader toggle={this.toggle1}><legend>Add Food Category</legend></ModalHeader>\r\n                <ModalBody>\r\n                  <FormGroup>\r\n                    <Input type=\"text\" placeholder=\"Enter category name\" name=\"category\" onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                  <FormGroup style={{display: \"ruby\"}}>\r\n                    <Label className=\"btn btn-outline-info float-left\" htmlFor=\"filePicker\">Upload image for food category</Label>\r\n                    <Input id=\"filePicker\" style={{visibility:\"hidden\"}} type='file' name='catImg' onChange={this.handleFileSelect}/>\r\n                    <img alt=\"Image Preview\"\r\n                      style={{display:'block', border: '1px solid gray', width:\"200px\", height:\"200px\", textAlign:'center'}} \r\n                      width='200' src={this.state.imgPreview}\r\n                    />\r\n                  </FormGroup>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-success btn-block\" id=\"btnbag\" onClick={this.addCat}>Add Category</button>\r\n                </ModalFooter>\r\n              </Modal>\r\n    \r\n              <Modal isOpen={this.state.modal}>\r\n                <ModalHeader toggle={this.toggle}><legend>Edit Category</legend></ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"form-group\">\r\n                      <label style={{color:'DarkSlateGray', fontSize:18}}> Category Name</label>\r\n                      <input type=\"text\" name=\"category\" className=\"form-control\" \r\n                        value ={this.state.category.category} onChange={this.handleupdate}/>\r\n\r\n                      <img alt=\"Image Preview\" width='200' src={this.state.imgPreview}/><br/>\r\n                      <label style={{color:'DarkSlateGray', fontSize:18}}>Choose picture for category :</label>\r\n                      <Input type='file' name='foodimage' onChange={this.handleFileSelect}/>\r\n                      \r\n                    </div>\r\n                    <Button className=\"btn btn-success btn-block\" \r\n                      onClick={() => this.updateCat(this.state.category._id)}>Update</Button>   \r\n                </ModalBody>\r\n                <ModalFooter></ModalFooter>\r\n              </Modal>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\Food.js",["119"],"import React, { Component } from 'react'\r\nimport { Button, FormGroup, Label, Row, Input, Modal, ModalHeader, ModalBody, ModalFooter, Form, Col } from 'reactstrap'\r\nimport axios from 'axios'\r\nimport ListFoods from './ListFoods'\r\nimport AdminNavbar from '../Navbar/adminNavbar';\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nexport default class AddFood extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            _id: null,\r\n            foodname: null,\r\n            price : null,\r\n            foodimage: null,\r\n            resturant:[],\r\n            categorys:[],\r\n            resSelect:'',\r\n            catSelect:'',\r\n            modal:false,\r\n            imgPreview:null,\r\n            config: {\r\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n            },\r\n            selectedFile: null,\r\n        }\r\n        this.toggle = this.toggle.bind(this)\r\n    }\r\n\r\n    toggle(){\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:3002/resturants',this.state.config)\r\n        .then((response)=>{\r\n          const data = response.data;\r\n          this.setState({\r\n              resturant: data,\r\n              resSelect:data[0]._id\r\n            });        \r\n        }).catch(error => console.log(error.response));\r\n\r\n        axios.get('http://localhost:3002/foodCat', this.state.config)\r\n        .then((response)=>{\r\n            const data = response.data;\r\n            this.setState({\r\n                categorys:data,\r\n                imgPreview:data.catImg,\r\n                catSelect:data[0]._id\r\n            });\r\n        }).catch(err=>console.log(err.response));\r\n      }\r\n    \r\n   handleFileSelect  = (e) =>{\r\n        this.setState({\r\n            selectedFile: e.target.files[0],\r\n            imgPreview:URL.createObjectURL(e.target.files[0])\r\n        })\r\n    }\r\n\r\n    handleChange = (e)  =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value \r\n        })\r\n    }\r\n\r\n    addCat = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData()\r\n        data.append('imageFile', this.state.selectedFile)\r\n        axios.post('http://localhost:3002/upload', data, this.state.config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    catImg: response.data.filename\r\n                })\r\n            axios.post('http://localhost:3002/foodCat',\r\n            {\r\n              category:this.state.category,\r\n              catImg:this.state.catImg\r\n            }, this.state.config)\r\n                .then((response)=>{\r\n                    console.log(response)\r\n                    alert(\"Category added successfully\")\r\n                    window.location.reload()\r\n                }).catch((err)=>console.log(err.response))\r\n            }).catch((err) => console.log(err.response))\r\n    }\r\n  \r\n    addFood = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData()\r\n        data.append('imageFile', this.state.selectedFile)\r\n        axios.post('http://localhost:3002/upload', data, this.state.config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    foodimage: response.data.filename\r\n                })\r\n                axios.post('http://localhost:3002/foods', \r\n                {\r\n                    foodname:this.state.foodname,\r\n                    price:this.state.price,\r\n                    foodimage:this.state.foodimage,\r\n                    restaurant:this.state.resSelect,\r\n                    category:this.state.catSelect\r\n                }, this.state.config)\r\n                    .then((response) => {\r\n                        console.log(response);\r\n                        window.location.reload();\r\n                    })\r\n                    .catch((err) => console.log(err.response))\r\n            }).catch((err) => console.log(err.response))\r\n    }\r\n\r\n    render() {      \r\n        return (\r\n            <>\r\n            <AdminNavbar/>\r\n            <div className=\"container\">\r\n                <Row>\r\n                    <Col md={6} className=\"text-left mt-4\">\r\n                        <h2 style={{color:'Crimson'}}>Add Item</h2>\r\n                    </Col>\r\n                    <Col md={6} className=\"text-right mt-4\">\r\n                        <Button color='primary' onClick={this.toggle}>\r\n                            <MdAdd style={{fontSize:\"30px\", color:\"white\"}} />\r\n                            Add Category\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <hr/>\r\n                <Form style={{backgroundColor:'#EAF2F8'}} className=\"col-10\">\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label for='foodname'>\r\n                                    <legend style={{fontSize:18}}>Food Name</legend>\r\n                                </Label>\r\n                                <Input type='text' id=\"foodname\" name='foodname' onChange={this.handleChange}/>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label for='foodprice'>\r\n                                    <legend style={{fontSize:18}}>Food price</legend>\r\n                                </Label>\r\n                                <NumberFormat id='foodprice' name='price'\r\n                                    customInput={Input} \r\n                                    onChange={ this.handleChange}\r\n                                    thousandSeparator \r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <FormGroup className=\"mt-1\">\r\n                                <Label for='resOption'>\r\n                                    <legend style={{fontSize:18}}>Choose Restaurant: </legend>\r\n                                </Label>\r\n                                <select onChange={this.handleChange} value={this.state.resSelect} name='resSelect' id='resOption' style={{width:200, textAlign:'center'}}>\r\n                                    {\r\n                                        this.state.resturant.map(option=>\r\n                                            <option key={option._id} value={option._id}>{option.resturant_name}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={4} className=\"mt-1\">\r\n                            <FormGroup>\r\n                                <Label for='catOption'>\r\n                                    <legend style={{fontSize:18}}>Choose Category: </legend>\r\n                                </Label>\r\n                                <span> </span>\r\n                                <select onChange={this.handleChange} value={this.state.catSelect} name='catSelect' id='catOption' style={{width:200, textAlign:'center'}}>\r\n                                {\r\n                                    this.state.categorys.map(option=>\r\n                                        <option key={option._id} value={option._id}>{option.category}</option>\r\n                                    )\r\n                                }\r\n                                </select>\r\n                                {' '}\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col md={3}>\r\n                            <FormGroup style={{display: \"ruby\"}}>\r\n                                <Label className=\"btn btn-outline-info float-left\" htmlFor=\"filePicker\">Upload image for food</Label>\r\n                                <Input id=\"filePicker\" style={{visibility:\"hidden\"}} type='file' name='food_image' onChange={this.handleFileSelect}/>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <img alt=\"Img Preview\" style={{width:200}} src={this.state.imgPreview}/><hr/>\r\n                         </Col>\r\n                    </Row>\r\n                    <Button color='success' onClick={this.addFood} block>Add Food</Button>\r\n                <hr/>\r\n                </Form>\r\n              <ListFoods />\r\n\r\n              <Modal isOpen={this.state.modal}>\r\n                <ModalHeader toggle={this.toggle}><legend>Add Food Category</legend></ModalHeader>\r\n                <ModalBody>\r\n                  <FormGroup>\r\n                    <Input type=\"text\" placeholder=\"Enter category name\" name=\"category\" onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                  <FormGroup style={{display: \"ruby\"}}>\r\n                    <Label className=\"btn btn-outline-info float-left\" htmlFor=\"filePicker\">Upload image for food category</Label>\r\n                    <Input id=\"filePicker\" style={{visibility:\"hidden\"}} type='file' name='catImg' onChange={this.handleFileSelect}/>\r\n                    <img alt=\"Image Preview\"\r\n                      style={{display:'block', border: '1px solid gray', width:\"200px\", height:\"200px\", textAlign:'center'}} \r\n                      width='200' src={this.state.imgPreview}\r\n                    />\r\n                  </FormGroup>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-success btn-block\" id=\"btnbag\" onClick={this.addCat}>Add Category</button>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </div>\r\n            </>\r\n            )\r\n        }    \r\n    }\r\n    \r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\Category.js",["120"],"import React, { Component } from 'react'\r\nimport {Row,Col,Modal,ModalHeader,ModalBody,ModalFooter,Container} from  'reactstrap';\r\nimport Axios from 'axios'\r\nimport   '../components/Style/category.css';\r\nimport { FiSearch } from \"react-icons/fi\";\r\n\r\nexport default class Category extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            category:[],  \r\n            foods:[],\r\n            food:[],\r\n            catName:'',\r\n            notes:'',\r\n            quantity:'1',\r\n            totalprice:'',\r\n            searchedFoods:'',\r\n            modal:false,\r\n            config: {\r\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n            },\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle(){\r\n        this.setState({\r\n          modal:!this.state.modal\r\n        })\r\n    }  \r\n\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:3002/foodCat', this.state.config)\r\n          .then((response) => {\r\n            console.log(response.data)\r\n            this.setState({\r\n              category: response.data\r\n            })\r\n          })\r\n          .catch((err) => console.log(err.response));\r\n    }\r\n\r\n    searchFood=(catId, catName)=>{\r\n       Axios.get(`http://localhost:3002/foods/searchByCat/${catId}`, this.state.config)\r\n        .then((response)=>{\r\n            const data=response.data\r\n            if(data[0]!=null){\r\n                this.setState({\r\n                    foods:response.data,\r\n                    catName:'Results for : '+ catName\r\n                })\r\n                console.log(this.state.catName)\r\n            }\r\n            else{\r\n                this.setState({\r\n                    catName :'No results found for : '+ catName,\r\n                    foods:[]\r\n                })   \r\n            }\r\n        })\r\n    }\r\n\r\n    handleFood = (foodId) => {\r\n        this.setState({\r\n          modal: !this.state.modal\r\n    \r\n        })\r\n        Axios.get(`http://localhost:3002/foods/${foodId}`, this.state.config)\r\n          .then((response) => {\r\n            const data = response.data;\r\n            this.setState({\r\n              food: data,\r\n              totalprice: data.price\r\n            });\r\n            console.log(\"data fecth\");\r\n          }).catch(error => console.log(error.response));\r\n    }\r\n\r\n    addCart(){\r\n        if(this.state.quantity<1){\r\n          alert(\"Please Enter a valid quantity\")\r\n        }\r\n        else{\r\n          if(localStorage.getItem('token'!=null)){\r\n            Axios.post(`http://localhost:3002/cart/`,\r\n              {\r\n                food: this.state.food._id,\r\n                totalprice: (this.state.totalprice * this.state.quantity),\r\n                notes: this.state.notes,\r\n                quanity: this.state.quantity\r\n              }, this.state.config)\r\n              .then((response) => {\r\n                console.log(response);\r\n                this.setState({\r\n                  modal: !this.state.modal\r\n                })\r\n              }).catch((err) => console.log(err.response));\r\n          }\r\n          else{\r\n            alert(\"Please login to add cart\");\r\n          }\r\n        }\r\n    }\r\n\r\n    searchbyName=(e)=>{\r\n        if(e.target.value!=null){\r\n            console.log(e.target.value)\r\n            Axios.get(`http://localhost:3002/foods/searchByName/${e.target.value}`, this.state.config)\r\n            .then((response)=>{\r\n                const data = response.data.food;\r\n                console.log(response.data.food)\r\n                if(data.length!==0){\r\n                    this.setState({\r\n                        foods:data,\r\n                        searchedFoods:'Results for : '+ e.target.value\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        foods:null,\r\n                        searchedFoods:'No Results found for : '+e.target.value\r\n                    })\r\n                }\r\n            }).catch((err)=>console.log(err.response))\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <span>What would you like to order ?{' '}\r\n                                <input style={{border: 'none',\r\n                                    borderBottom: '2px solid #1ABC9C'}} \r\n                                    type=\"text\" name=\"search\" id=\"search\" placeholder=\"search food...\" \r\n                                    onChange={this.searchbyName}/>\r\n                                <FiSearch style={{fontSize:\"30px\", opacity:0.6}}/>\r\n                            </span>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    \r\n                    <Row>\r\n                        {this.state.category.map(catIcon =>\r\n                        <Col>\r\n                            <div key={catIcon._id}>\r\n                                <img alt=\"catPic\" onClick={()=>this.searchFood(catIcon._id, catIcon.category)} \r\n                                    style={{marginLeft:30, width:'40px', height:'40px'}}\r\n                                    className=\"categoryList\"\r\n                                    src ={`http://localhost:3002/uploads/${catIcon.catImg}`} id=\"catImg\"/> \r\n                            </div>\r\n                        </Col>\r\n                        )}\r\n                    </Row>    \r\n                </div>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <h3 style={{color:'FireBrick'}}>{this.state.catName?this.state.catName:''}</h3>\r\n                    <h3 style={{color:'FireBrick'}} className=\"text-left\">{this.state.searchedFoods?this.state.searchedFoods:''}</h3>\r\n                    <Row>\r\n                        {this.state.foods!=null ?                     \r\n                        this.state.foods.map((food => \r\n                            <div className=\"Col-md-4\" id=\"product\">\r\n                                <figure className=\"card card-product p-2\">\r\n                                    <img alt=\"foodPic\" width='250' height='150' src={`http://localhost:3002/uploads/${food.foodimage}`}/>\r\n                                    <figcaption class=\"info-wrap\">\r\n                                        <legend className=\"title\">{food.foodname}</legend>\r\n                                        <h6 className=\"title\">Rs. {food.price}</h6>\r\n                                    </figcaption>\r\n                                    <button class=\"btn btn-primary\" onClick={()=>this.handleFood(food._id)}>Add to cart</button>\r\n                                </figure>\r\n                            </div>\r\n                            )):''}\r\n                    </Row>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.modal}>\r\n                    <ModalHeader toggle={this.toggle}>Item : {this.state.food.foodname}<br/>\r\n                            Price : Rs.{this.state.food.price}\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <p>Add notes</p>\r\n                        <textarea id=\"notes\" className=\"col-md-10\" value={this.state.notes} placeholder=\"Customize food as your taste\" name=\"notes\" onChange={this.handleChange}></textarea>\r\n                        <hr/>\r\n                        <p>Add quantity</p>\r\n                        <input type=\"number\" pattern=\"[0-9]*\" name=\"quantity\" min={1} value={this.state.quantity} onChange={this.handleChange} min=\"1\" max=\"100\" />\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Container id=\"ftr\">\r\n                        <button className=\"btn btn-lg btn-success\" id=\"btnbag\" onClick={() => this.addCart(this.state.food._id)}>Add to cart</button>\r\n                        </Container>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\Popular.js",["121"],"import React, { Component } from 'react'\r\nimport { Row, Modal, ModalHeader, ModalBody, ModalFooter, Container } from 'reactstrap'\r\nimport '../components/Style/popular.css'\r\nimport Axios from 'axios'\r\n\r\nexport default class Popular extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      foodname: '',\r\n      foodimage: '',\r\n      food:[],\r\n      notes:'',\r\n      quantity:'1',\r\n      popular: [],\r\n      totalprice:'',\r\n      modal:false,\r\n      config: {\r\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n      },\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle(){\r\n    this.setState({\r\n      modal:!this.state.modal\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get('http://localhost:3002/foods',this.state.config)\r\n    .then((response)=>{\r\n      const data = response.data;\r\n      this.setState({popular:  data});\r\n      console.log(\"data fecth\");\r\n     \r\n    }).catch(error => console.log(error.response));\r\n  }\r\n\r\n  handleFood = (foodId) => {\r\n    // if(localStorage.length===0) {\r\n    //   alert(\"Please login first...\")\r\n    // }\r\n    // else{\r\n    this.setState({\r\n      modal: !this.state.modal\r\n\r\n    })\r\n    Axios.get(`http://localhost:3002/foods/${foodId}`, this.state.config)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        this.setState({\r\n          food: data,\r\n          totalprice: data.price\r\n        });\r\n        console.log(\"data fecth\");\r\n      }).catch(error => console.log(error.response));\r\n    // }\r\n  }\r\n\r\n  addCart(){\r\n    // if(this.state.quantity<1){\r\n    //   alert(\"Please Enter a valid quantity\")\r\n    // }\r\n    // else{\r\n    //   if(localStorage.getItem('token'!=null)){\r\n        Axios.post(`http://localhost:3002/cart/`,\r\n          {\r\n            food: this.state.food._id,\r\n            totalprice: (this.state.totalprice * this.state.quantity),\r\n            notes: this.state.notes,\r\n            quanity: this.state.quantity\r\n          }, this.state.config)\r\n          .then((response) => {\r\n            console.log(response);\r\n            this.setState({\r\n              modal: !this.state.modal\r\n            })\r\n          }).catch((err) => console.log(err.response));\r\n    //   }\r\n    //   else{\r\n    //     alert(\"Please login to add cart\");\r\n    //   }\r\n    // }\r\n  }\r\n\r\n    render() {\r\n        return (\r\n           <div style={{backgroundColor:'OldLace'}} className=\"container\">\r\n              <span className='h3' style={{color:'DarkOrange'}}>ITEMS FOR YOU</span>\r\n            <Row>\r\n              {\r\n                this.state.popular.map((pop => \r\n                  <div key={pop._id} className=\"Col-md-4\" id=\"product\">\r\n                    <figure className=\"card card-product p-2\">\r\n                        <img alt=\"foodPic\" width='250' height='150' src={`http://localhost:3002/uploads/${pop.foodimage}`}/>\r\n                        <figcaption className=\"info-wrap\">\r\n                          <legend className=\"title\">{pop.foodname}</legend>\r\n                          <h6 className=\"title\">Rs. {pop.price}</h6>\r\n                        </figcaption>\r\n                        <button className=\"btn btn-primary\" onClick={()=>this.handleFood(pop._id)}>Add to cart</button>\r\n                    </figure>\r\n                  </div>\r\n                  ))\r\n              }\r\n            </Row>\r\n           \r\n\r\n            <Modal isOpen={this.state.modal}>\r\n              <form>\r\n              <ModalHeader toggle={this.toggle}>Item : {this.state.food.foodname}<br/>\r\n                      Price : Rs.{this.state.food.price}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <p>Add notes</p>\r\n                <textarea id=\"notes\" className=\"col-md-10\" value={this.state.notes} placeholder=\"Customize food as your taste\" name=\"notes\" onChange={this.handleChange}></textarea>\r\n                <hr/>\r\n                <p>Add quantity</p>\r\n                <input type=\"number\" pattern=\"[0-9]*\" name=\"quantity\" min={1} value={this.state.quantity} onChange={this.handleChange} min=\"1\" max=\"100\" />\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Container id=\"ftr\">\r\n                  <button className=\"btn btn-lg btn-success\" id=\"btnbag\" onClick={() => this.addCart(this.state.food._id)}>Add to cart</button>\r\n                </Container>\r\n              </ModalFooter>\r\n              </form>\r\n            </Modal>\r\n          </div>\r\n        )\r\n  }\r\n}\r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\Restaurant.js",[],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\ListResturant.js",["122","123","124"],"import React, { Component } from 'react'\r\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter,Input } from 'reactstrap';\r\nimport Axios from 'axios'\r\n\r\n\r\nexport default class ListFoods extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n                 _id: '',\r\n                 resturant_name: '',\r\n                 resturant_address: '',\r\n                 res_image:'',\r\n                 popular: [],\r\n                 resturant: [],\r\n                 modal : false,\r\n                 isupdated: false,\r\n                 config: {\r\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n                },\r\n                selectedFile: null,\r\n                imgPreview:null,\r\n          }\r\n          this.toggle = this.toggle.bind(this);\r\n      }\r\n\r\n  toggle() {\r\n    this.setState({\r\n    modal: !this.state.modal\r\n    })\r\n  }\r\n             \r\n  componentDidMount() {\r\n    Axios.get('http://localhost:3002/resturants',this.state.config)\r\n    .then((response)=>{\r\n      const data = response.data;\r\n      this.setState({popular:  data});\r\n      this.setState({resturant: data});        \r\n      console.log(\"data fecth\");       \r\n    }).catch(error => console.log(error.response));\r\n  }\r\n\r\n  handleFileSelect = (e) => {\r\n    this.setState({\r\n      selectedFile: e.target.files[0],\r\n      imgPreview: URL.createObjectURL(e.target.files[0])\r\n    })\r\n  }     \r\n       \r\n  handleChange = (e)  =>{\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  deleteresturant(resId){\r\n    Axios.delete(`http://localhost:3002/resturants/${resId}`, this.state.config)\r\n    .then((response) => {\r\n      console.log(\"delete trying\")\r\n    })\r\n  }\r\n\r\n  handleEdit = (resId) => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n    Axios.get(`http://localhost:3002/resturants/${resId}`,this.state.config)\r\n    .then((response)=>{\r\n      const data = response.data;\r\n      this.setState({\r\n        resturant: data,\r\n        imgPreview:`http://localhost:3002/uploads/${data.res_image}`\r\n      });         \r\n    }).catch(error => console.log(error.response)); \r\n  }\r\n\r\n  handleupdate = (e) =>{\r\n    this.setState({\r\n      resturant: { ...this.state.resturant, [e.target.name]: e.target.value }\r\n    })\r\n  }\r\n     \r\n  updateRestaurant = (resId) => {\r\n    const data = new FormData()\r\n    data.append('imageFile', this.state.selectedFile)\r\n    Axios.post('http://localhost:3002/upload', data, this.state.config)\r\n    .then((response) => {\r\n      this.setState({\r\n        res_image: response.data.filename\r\n      })\r\n      console.log(response)\r\n      Axios.put(`http://localhost:3002/resturants/${resId}`, \r\n      { \r\n        resturant_name:this.state.resturant.resturant_name,\r\n        resturant_address: this.state.resturant.resturant_address,\r\n        res_image:this.state.res_image \r\n      },this.state.config)\r\n        .then((response) => {\r\n          // alert(\"Restaurant updated successfully\")\r\n            window.location.reload();\r\n          console.log(response.data)\r\n        })\r\n        .catch((err) => console.log(err.response))\r\n    }).catch((err) => console.log(err.response))\r\n    }    \r\n  \r\n    render() {\r\n        return (\r\n            <Table hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Resturant Name</th>\r\n                <th>Resturant Address</th>\r\n                <th>Resturant Image</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                  this.state.popular.map(pop => \r\n                  <tr key={pop._id}>\r\n                    <td>{pop.resturant_name}</td>\r\n                    <td>{pop.resturant_address}</td>\r\n                          <td><img alt=\"img\" src={`http://localhost:3002/uploads/${pop.res_image}`} style={{height: \"50px\",width:\"50px\"}}/></td>\r\n                    <td><a className=\"btn btn-success\" onClick={() => this.handleEdit(pop._id)}>\r\n                                        Edit</a></td>\r\n                    <td><a onClick={() => this.deleteresturant(pop._id)} className=\"btn btn-danger\" href=\"\">Delete</a></td>\r\n                  </tr>\r\n                  )\r\n                }\r\n    \r\n        <Modal isOpen={this.state.modal}>\r\n          <ModalHeader toggle={this.toggle}><legend>Update</legend></ModalHeader>\r\n          <ModalBody>\r\n                <legend><h3>Update Resturant</h3></legend>\r\n                <div className=\"form-group\">\r\n                    <label> Resturant Name</label> \r\n                      <input type=\"text\" name=\"resturant_name\" className=\"form-control\"\r\n                        value ={this.state.resturant.resturant_name} onChange={this.handleupdate}/> \r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                      <label>Resturant Address</label>\r\n                      <input type=\"text\" name=\"resturant_address\" className=\"form-control\"\r\n                      value={this.state.resturant.resturant_address}  \r\n                      onChange={this.handleupdate}  />\r\n                  </div>\r\n                  <img className='img-thumbnail' width='200'\r\n                  src={this.state.imgPreview} alt=\"resImg\" />\r\n                  <Input type='file' name='res_image' id='res_image'\r\n                    onChange={this.handleFileSelect}/>\r\n                  <button className=\"btn btn-primary btn-block\" onClick={() => this.updateRestaurant(this.state.resturant._id)}>Update</button>   \r\n          </ModalBody>\r\n          <ModalFooter>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </tbody>\r\n    </Table>\r\n    )\r\n  }\r\n}\r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\pages\\ListFoods.js",["125","126"],"import React, { Component } from 'react'\r\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter,Input } from 'reactstrap';\r\nimport Axios from 'axios'\r\n\r\n\r\nexport default class ListFoods extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          _id: '',\r\n          foodname: '',\r\n          foodimage: '',\r\n          price:'',\r\n          imgpreview:null,\r\n          popular: [],\r\n          food: [],\r\n          categorys:[],\r\n          resturant:[],\r\n          resSelect:'',\r\n          catSelect:'',\r\n          modal : false,\r\n          isupdated: false,\r\n          config: {\r\n            headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n          },\r\n          selectedFile: null,\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    } \r\n             \r\n    componentDidMount() {\r\n      Axios.get('http://localhost:3002/foods',this.config)\r\n        .then((response)=>{\r\n          const data = response.data;\r\n          this.setState({popular:  data});\r\n          this.setState({food: data});\r\n          console.log(this.state.popular);\r\n        }).catch(error => console.log(error.response));\r\n\r\n      Axios.get('http://localhost:3002/resturants',this.state.config)\r\n      .then((response)=>{\r\n        const data = response.data;\r\n        this.setState({\r\n            resturant: data,\r\n            resSelect:data[0]._id\r\n          });        \r\n      }).catch(error => console.log(error.response));\r\n\r\n      Axios.get('http://localhost:3002/foodCat', this.state.config)\r\n        .then((response)=>{\r\n            const data = response.data;\r\n            this.setState({\r\n                categorys:data,\r\n                imgpreview:data.catImg,\r\n                catSelect:data[0]._id\r\n            });\r\n        }).catch(err=>console.log(err.response));\r\n    }\r\n\r\n    toggle=()=>{ \r\n      this.setState({\r\n        modal: !this.state.modal\r\n    })}\r\n        \r\n    handleFileSelect = (e) => {\r\n      this.setState({\r\n        selectedFile: e.target.files[0],\r\n        imgpreview: URL.createObjectURL(e.target.files[0])\r\n      })\r\n    }\r\n     \r\n    uploadFile = (e) => {\r\n      e.preventDefault();\r\n      const data = new FormData()\r\n      data.append('imageFile', this.state.selectedFile)\r\n      Axios.post('http://localhost:3002/upload', data, this.state.config)\r\n        .then((response) => {\r\n          this.setState({\r\n            foodname: this.state.foodname,\r\n            price:this.state.price,\r\n            foodimage: response.data.filename\r\n          })\r\n        }).catch((err) => console.log(err.response))\r\n    }\r\n     \r\n       \r\n    handleChange = (e)  =>{\r\n      this.setState({\r\n        [e.target.name]: e.target.value \r\n      })\r\n    }\r\n\r\n    deletefood(foodId){\r\n      Axios.delete(`http://localhost:3002/foods/${foodId}`, this.state.config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        window.location.reload()   \r\n      })\r\n      .catch(error => console.log(error.response));\r\n    }\r\n\r\n    handleEdit = (foodId) => {\r\n      this.setState({\r\n        modal: !this.state.modal\r\n      });\r\n      Axios.get(`http://localhost:3002/foods/${foodId}`,this.state.config)\r\n      .then((response)=>{\r\n        const data = response.data;\r\n          this.setState({\r\n            food: data,\r\n            imgpreview:`http://localhost:3002/uploads/${data.foodimage}`\r\n          });    \r\n        console.log(\"data fecth\");\r\n        })\r\n      .catch(error => console.log(error.response));\r\n    }\r\n\r\n    handleupdate = (e) =>{\r\n      this.setState({\r\n        food: { ...this.state.food, [e.target.name]: e.target.value }\r\n      })\r\n    }\r\n     \r\n    updateFood = (foodId) => {\r\n      const data = new FormData()\r\n      data.append('imageFile', this.state.selectedFile)\r\n      Axios.post('http://localhost:3002/upload', data, this.state.config)\r\n        .then((response) => {\r\n          this.setState({\r\n            foodimage: response.data.filename\r\n          })\r\n          Axios.put(`http://localhost:3002/foods/${foodId}`, \r\n            { \r\n              foodname: this.state.food.foodname, \r\n              price: this.state.food.price,\r\n              foodimage: this.state.foodimage, \r\n              restaurant: this.state.resSelect,\r\n              category: this.state.catSelect\r\n            }, this.state.config)\r\n          .then((response) => {\r\n            alert(\"Food updated successfully\")\r\n            console.log(response.data)\r\n            window.location.reload();\r\n          })\r\n          .catch((err)=>console.log(err.response))\r\n        })\r\n        .catch((err) => console.log(err.response))\r\n    }\r\n    \r\n    render() \r\n    {\r\n        return (\r\n            <Table hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Restaurant Name</th>\r\n                <th>Category</th>\r\n                <th>Food Name</th>\r\n                <th>Food price</th>\r\n                <th>Food image</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                this.state.popular.map(pop => \r\n                <tr key={pop._id}>\r\n                  <td>{pop.restaurant.resturant_name}</td>\r\n                  <td>{pop.category.category}</td>\r\n                  <td>{pop.foodname}</td>\r\n                  <td>{pop.price}</td>\r\n                  <td>\r\n                    <img alt=\"foodPic\" src={`http://localhost:3002/uploads/${pop.foodimage}`} style={{height: \"50px\",width:\"50px\"}}/>\r\n                  </td>\r\n                  <td>\r\n                    <a className=\"btn btn-success\" onClick={() => this.handleEdit(pop._id)}>Edit</a>\r\n                  </td>\r\n                  <td>\r\n                    <a onClick={() => this.deletefood(pop._id)} className=\"btn btn-danger\" href=\"\">Delete</a>\r\n                  </td>\r\n                </tr>\r\n                )\r\n              }\r\n    \r\n              <Modal isOpen={this.state.modal}>\r\n                <ModalHeader toggle={this.toggle}><legend><h3>Update Food</h3></legend></ModalHeader>\r\n                <ModalBody>\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label for='foodname'> Food Name</label>\r\n                      <input type=\"text\" name=\"foodname\" className=\"form-control\" \r\n                        value ={this.state.food.foodname} onChange={this.handleupdate}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label for='price'>Food price</label>\r\n                      <input type=\"text\" name=\"price\" className=\"form-control\"\r\n                        value={this.state.food.price} onChange={this.handleupdate}  />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for='resOption'>\r\n                            <legend style={{fontSize:16}}>Choose Restaurant: </legend>\r\n                        </label>\r\n                        {' '}\r\n                        <select onChange={this.handleChange} value={this.state.resSelect} name='resSelect' id='resOption' style={{width:200, textAlign:'center'}}>\r\n                            {\r\n                              this.state.resturant.map(option=>\r\n                                  <option key={option._id} value={option._id}>{option.resturant_name}</option>\r\n                              )\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for='resOption'>\r\n                            <legend style={{fontSize:16}}>Choose Food Category: </legend>\r\n                        </label>\r\n                        {' '}\r\n                        <select onChange={this.handleChange} value={this.state.catSelect} name='catSelect' id='catOption' style={{width:200, textAlign:'center'}}>\r\n                          {\r\n                            this.state.categorys.map(option=>\r\n                                <option key={option._id} value={option._id}>{option.category}</option>\r\n                            )\r\n                          }\r\n                        </select>\r\n                    </div>\r\n                    <img className='img-thumbnail' width='200' \r\n                      src={this.state.imgpreview} alt=\"foodimg\" />\r\n                    <Input type='file' name='foodimage' id='foodimg'\r\n                      onChange={this.handleFileSelect} value={this.state.image}/> \r\n                    <Button className=\"btn btn-primary btn-block\" \r\n                      onClick={() => this.updateFood(this.state.food._id)}>Update</Button>\r\n                  </form>     \r\n                </ModalBody>\r\n                <ModalFooter></ModalFooter>\r\n              </Modal>\r\n            </tbody>\r\n          </Table>\r\n        )\r\n    }\r\n}\r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\components\\Carousel\\Carousel.js",["127"],"import React, { useState } from 'react';\r\nimport './Carousel.css';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption, \r\n  Button\r\n} from 'reactstrap';\r\n\r\nimport pic1 from \"../../assets/pic1.jpeg\";\r\nimport pic2 from \"../../assets/pic2.jpeg\";\r\nimport pic3 from \"../../assets/pic3.jpeg\";\r\n\r\nconst items = [\r\n  {\r\n    src: pic1,\r\n    altText: 'Slide 1',\r\n    caption: <span>\r\n      <h1 align=\"left\">FOODIE NEPAL</h1>\r\n      <p>FOODIE NEPAL is a leading professional food company in Nepal. Try us for amazing taste if u haven't yet.</p>\r\n      {/* <Button className=\"btnCarousel\" outline href=\"/contact\" size=\"lg\">CONTACT US</Button> */}\r\n    </span>\r\n  },\r\n  {\r\n    src: pic2,\r\n    altText: 'Slide 2',\r\n  },\r\n  {\r\n    src: pic3,\r\n    altText: 'Slide 3',\r\n  }\r\n];\r\n\r\nconst Example = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  const slides = items.map((item) => {\r\n    return (        \r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img src={item.src} className=\"carouselImg\" alt={item.altText} />\r\n        <CarouselCaption className=\"sliderContent fade-in\" captionText={item.caption} />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n        <Carousel\r\n        className=\"carouselDiv\"\r\n        activeIndex={activeIndex}\r\n        next={next}\r\n        previous={previous}\r\n        >\r\n        <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n        {slides}\r\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n        </Carousel>\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Example;","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\components\\Footer\\Footer.js",["128"],"import React from 'react';\r\nimport './Footer.css';\r\nimport {\r\n  Row,\r\n  Col\r\n} from 'reactstrap';\r\nimport { GrFacebook, GrTwitter, GrLinkedin} from \"react-icons/gr\";\r\nimport { SiGmail } from \"react-icons/si\";\r\n\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <div className=\"footerDiv\">\r\n        <div className=\"container\">\r\n            <Row>\r\n                <Col lg={4}>\r\n                    <div align=\"left\" className=\"p-5\">\r\n                        <p className=\"footerTitle\">FOODIE NEPAL</p>\r\n                        <span className=\"footerFont\">\r\n                        01-1234567<br/>\r\n                        <a align=\"left\" href=\"/contact\">contact@foodienepal.com</a><br/>\r\n                        New Baneshwor, KTM<br/>\r\n                        </span>   \r\n                    </div>\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <div align=\"left\" className=\"p-5\">\r\n                        <p className=\"footerTitle\">ABOUT FOODIE NEPAL</p>\r\n                        <span className=\"footerFont\">\r\n                        <p>FOODIE NEPAL is the project developed for academic course module (Agile Development).\r\n                            This is a team project in which team members are Amit Pradhan, Nabin Sapkota, Sachindra Thapa,\r\n                            Sujan Majkoti, Sandesh K.C and Ayush Ghimire. It is supervised by the module leader (Pratik Bhusal). </p>\r\n                        </span> \r\n                    </div>\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <div align=\"left\" className=\"p-5\">\r\n                        <p className=\"footerTitle\">QUICK LINKS</p>\r\n                        <span className=\"footerFont\" >\r\n                            <a href=\"/\">HOME</a><hr/>\r\n                            <a href=\"/foods\">FOODS</a><hr/>\r\n                            <a href=\"/about\">ABOUT US</a><hr/>\r\n                            <a href=\"/contact\">CONTACT</a>\r\n                        </span>\r\n                    </div>\r\n                </Col>\r\n                <Col align=\"left\" className=\"footerFont pl-5\">\r\n                <p> <a href=\"/\">© FOODIE NEPAL</a> | Site by\r\n                <a href=\"#\"> AMIT PRADHAN</a>\t</p>\r\n                </Col>\r\n                <Col align=\"right\">\r\n                <a className=\"m-1\" href=\"https://www.facebook.com/\"><GrFacebook/></a>\r\n                <a className=\"m-1\" href=\"https://twitter.com/\"><GrTwitter/></a>\r\n                <a className=\"m-1\" href=\"https://www.linkedin.com/\"><GrLinkedin/></a>\r\n                <a className=\"m-1\" href=\"https://www.gmail.com/\"><SiGmail/></a>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\components\\Navbar\\Navbar.js",["129"],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\admin\\Navbar\\adminNavbar.js",["130"],"import React, { Component } from 'react'\r\nimport {Navbar,NavbarBrand,NavbarToggler,Collapse,Nav,NavItem,NavLink,UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem, NavbarText} from 'reactstrap';\r\nimport './adminnavbar.css';\r\nimport { MdAccountCircle } from \"react-icons/md\";\r\n\r\n\r\nexport default class AdminNavbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             sidenavbar:false,\r\n             isOpen:false,\r\n             fullname:'',\r\n             config: {\r\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n              },\r\n        }\r\n    }\r\n     \r\n    toggle(){\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            fullname:localStorage.getItem('fullname')\r\n        })\r\n    }\r\n    \r\n    handleLogout = (e) => {\r\n        e.preventDefault();\r\n        localStorage.removeItem('token');\r\n        localStorage.clear();\r\n        if (localStorage.getItem('token') == null) {\r\n          window.location.href=\"/\"\r\n        }\r\n      }\r\n    \r\n    render() {\r\n            return (\r\n                <div>\r\n                <Navbar color=\"light\" light expand=\"md\">\r\n                    <NavbarBrand href=\"/adminDashboard\"><h3 style={{color:'DarkTurquoise'}}>FOODIE NEPAL</h3></NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle.bind(this)} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/adminDashboard\">Home</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/restaurant\">Restaurants</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/food\">Items</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/foodCategory\">Item Category</NavLink>\r\n                        </NavItem>\r\n                        \r\n                    </Nav>\r\n                    <NavLink>\r\n                        <UncontrolledDropdown>\r\n                            <DropdownToggle nav caret>\r\n                            <MdAccountCircle style={{fontSize:\"30px\", marginRight:\"5px\"}}/>\r\n                            {this.state.fullname}\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem href=\"#\">\r\n                                My Profile\r\n                                </DropdownItem>\r\n                                <DropdownItem onClick={this.handleLogout}>\r\n                                Log Out\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </NavLink>\r\n                    </Collapse>\r\n                </Navbar>\r\n                </div>   \r\n            )\r\n    }\r\n}\r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\viewOrder.js",["131"],"import React, { Component } from 'react'\r\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport UserNavbar from \"../components/Navbar/Navbar\";\r\n\r\nexport default class ViewOrder extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            user : '',\r\n            modal:false,\r\n            food : '',\r\n            quanity : '',\r\n            orderDate:'',\r\n            totprice: '',\r\n            totAmt:0,\r\n            orders: [],\r\n            viewOrder:[],\r\n            config: {\r\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n            }\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n      Axios.get('http://localhost:3002/order',this.state.config)\r\n        .then((response)=>{\r\n          const data = response.data;\r\n          this.setState({\r\n          orders: data\r\n          });\r\n          console.log(data);\r\n        }).catch((err) => console.log(err.response));\r\n    }\r\n\r\n    toggle() {\r\n      this.setState({\r\n        modal: !this.state.modal\r\n      })\r\n    }\r\n\r\n    handleViewOrder=(orderId)=>{\r\n      this.setState({\r\n        modal: !this.state.modal,\r\n        orderDate:orderId\r\n      })\r\n      Axios.get(`http://localhost:3002/order/${orderId}`, this.state.config)\r\n        .then((response)=>{\r\n          const data = response.data;\r\n          this.setState({viewOrder:data});\r\n          console.log(this.state.viewOrder);\r\n        }).catch((err)=>console.log(err.response));\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n          [e.target.name]: e.target.value\r\n      })\r\n    }\r\n    \r\n    render() {\r\n      this.state.totAmt = this.state.viewOrder.reduce(\r\n        (prevValue, currentValue) => prevValue + currentValue.food.price*currentValue.quanity,0);\r\n        return (\r\n            <div>\r\n            <UserNavbar/>\r\n              <Table hover>\r\n                <thead>\r\n                  <tr class='h4'>\r\n                    <th>Ordered date & time</th>\r\n                    <th>View Order</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                  this.state.orders.map(order => {\r\n                    return(\r\n                      <tr key={order._id}>\r\n                          <td>\r\n                          <h5>{order._id}</h5>\r\n                          </td>\r\n                          <td><button type=\"button\" class=\"btn btn-primary\"\r\n                          onClick={() => this.handleViewOrder(order._id)}>View Invoice</button></td>\r\n                      </tr>\r\n                    )})\r\n                  }\r\n                </tbody>\r\n              </Table>\r\n\r\n              <Modal size=\"md\" isOpen={this.state.modal} modalTransition={{ timeout: 200 }} backdropTransition={{ timeout: 300 }}\r\n                toggle={this.toggle}>\r\n                <ModalHeader toggle={this.toggle} style={{color:'#1f618d', backgroundColor:'#F4F6F6'}}>\r\n                  <h3>Foodie Nepal</h3>\r\n                </ModalHeader>\r\n                <ModalBody style={{backgroundColor:'#F8F9F9'}}>\r\n                  <h5>Ordered Date : <span class=\"h6\"> {this.state.orderDate} </span></h5>\r\n                  \r\n                  <Table>\r\n                    <thead>\r\n                    <tr>\r\n                      <th>Food Name</th>\r\n                      <th>Quantity</th>\r\n                      <th>Price</th>\r\n                      <th>Total Price</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        this.state.viewOrder.map(listItem=>{\r\n                          return(\r\n                            <tr key={listItem._id}>\r\n                              <td>{listItem.food.foodname}</td>\r\n                              <td>{listItem.quanity}</td>\r\n                              <td>{listItem.food.price}</td>\r\n                              <td>{listItem.food.price*listItem.quanity}</td>\r\n                            </tr>\r\n                          )\r\n                        })\r\n                      }\r\n                    </tbody>\r\n                    <tfoot>\r\n                      <tr>\r\n                        <td colSpan=\"4\" align=\"right\">\r\n                          <h4 style={{color:'#34495E'}}>Total Amount: Rs {this.state.totAmt}</h4>\r\n                        </td>\r\n                      </tr>\r\n                    </tfoot>\r\n                  </Table>\r\n                </ModalBody>\r\n                <ModalFooter style={{backgroundColor:'#F4F6F6'}}>\r\n                  <Button color=\"primary\" onClick={this.toggle}>Print Bill</Button>\r\n                  <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\ResturantFood.js",[],"F:\\UbuntuBackup2021-01-04\\ubuntu20.04\\Agile\\FoodieNepal_Frontend\\foodienepal\\src\\Pages\\viewProfile.js",["132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":149,"column":5,"nodeType":"140","endLine":149,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":89,"column":15,"nodeType":"143","endLine":91,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":165,"column":21,"nodeType":"143","endLine":165,"endColumn":93},{"ruleId":"144","severity":1,"message":"145","line":168,"column":21,"nodeType":"143","endLine":168,"endColumn":91},{"ruleId":"141","severity":1,"message":"142","line":183,"column":21,"nodeType":"143","endLine":186,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":202,"column":23,"nodeType":"143","endLine":202,"endColumn":89},{"ruleId":"141","severity":1,"message":"142","line":219,"column":21,"nodeType":"143","endLine":222,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":197,"column":144,"nodeType":"148","endLine":197,"endColumn":151},{"ruleId":"146","severity":1,"message":"147","line":128,"column":136,"nodeType":"148","endLine":128,"endColumn":143},{"ruleId":"149","severity":1,"message":"150","line":2,"column":17,"nodeType":"151","messageId":"152","endLine":2,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":127,"column":25,"nodeType":"143","endLine":127,"endColumn":97},{"ruleId":"144","severity":1,"message":"153","line":129,"column":25,"nodeType":"143","endLine":129,"endColumn":109},{"ruleId":"144","severity":1,"message":"145","line":177,"column":21,"nodeType":"143","endLine":177,"endColumn":93},{"ruleId":"144","severity":1,"message":"153","line":180,"column":21,"nodeType":"143","endLine":180,"endColumn":100},{"ruleId":"149","severity":1,"message":"150","line":9,"column":3,"nodeType":"151","messageId":"152","endLine":9,"endColumn":9},{"ruleId":"144","severity":1,"message":"153","line":49,"column":17,"nodeType":"143","endLine":49,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":158,"column":13,"nodeType":"143","endLine":158,"endColumn":45},{"ruleId":"149","severity":1,"message":"154","line":2,"column":134,"nodeType":"151","messageId":"152","endLine":2,"endColumn":144},{"ruleId":"138","severity":1,"message":"139","line":64,"column":7,"nodeType":"140","endLine":64,"endColumn":17},{"ruleId":"149","severity":1,"message":"155","line":9,"column":5,"nodeType":"151","messageId":"152","endLine":9,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":112,"column":21,"nodeType":"143","endLine":112,"endColumn":76},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavbarText' is defined but never used.","'ModalFooter' is defined but never used.","no-global-assign","no-unsafe-negation"]